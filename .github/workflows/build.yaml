name: Build App

on: [push]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        build:
          - platform: 'linux/amd64'
            os: 'ubuntu-latest'
          - platform: 'windows/amd64'
            os: 'windows-latest'
          - platform: 'darwin/universal'
            os: 'macos-latest'
        mode:
          - debug
          - production
    runs-on: ${{ matrix.build.os }}
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
      - name: Normalise platform
        id: normalise_platform
        shell: bash
        run: |
          tag=$(echo ${{ matrix.build.platform }} | sed -e 's/\//_/g')
          echo "tag=$tag" >> "$GITHUB_OUTPUT"
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: stable
      - name: Install wails
        shell: bash
        run: go install github.com/wailsapp/wails/v2/cmd/wails@latest
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
      - name: Set debug
        id: set_debug
        if: matrix.mode == 'debug'
        shell: bash
        run: |
          echo "suffix=_${{ matrix.mode }}" >> "$GITHUB_OUTPUT"
          echo "arg=-${{ matrix.mode }}" >> "$GITHUB_OUTPUT"
      - name: Set version
        shell: bash
        run: |
          version=$(jq '.commitizen.version' .cz.json)
          jq ".info.productVersion = $version" wails.json > wails.copy.json
          mv wails.copy.json wails.json

      # Linux
      - name: Install Linux prerequisites
        if: startsWith(matrix.build.platform, 'linux')
        shell: bash
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev
      - name: Build Linux ${{ matrix.mode }} App
        if: startsWith(matrix.build.platform, 'linux')
        shell: bash
        run: wails build -clean -platform ${{ matrix.build.platform }} ${{ steps.set_debug.outputs.arg }} -o asmblive_${{ steps.normalise_platform.outputs.tag }}${{ steps.set_debug.outputs.suffix }}
      - name: Add perms to Linux ${{ matrix.mode }} App
        if: startsWith(matrix.build.platform, 'linux')
        shell: bash
        run: chmod +x build/bin/asmblive_${{ steps.normalise_platform.outputs.tag }}${{ steps.set_debug.outputs.suffix }}
      - name: Upload Linux ${{ matrix.mode }} artifact
        if: startsWith(matrix.build.platform, 'linux')
        uses: actions/upload-artifact@v4
        with:
          name: asmblive_${{ steps.normalise_platform.outputs.tag }}${{ steps.set_debug.outputs.suffix }}
          path: build/bin/asmblive_${{ steps.normalise_platform.outputs.tag }}${{ steps.set_debug.outputs.suffix }}

      # Windows
      - name: Build Windows ${{ matrix.mode }} App
        if: startsWith(matrix.build.platform, 'windows')
        shell: bash
        run: wails build -clean -platform ${{ matrix.build.platform }} ${{ steps.set_debug.outputs.arg }} -o asmblive_${{ steps.normalise_platform.outputs.tag }}${{ steps.set_debug.outputs.suffix }}.exe
      - name: Upload Windows ${{ matrix.mode }} artifact
        if: startsWith(matrix.build.platform, 'windows')
        uses: actions/upload-artifact@v4
        with:
          name: asmblive_${{ steps.normalise_platform.outputs.tag }}${{ steps.set_debug.outputs.suffix }}.exe
          path: build/bin/asmblive_${{ steps.normalise_platform.outputs.tag }}${{ steps.set_debug.outputs.suffix }}.exe
      - name: Build Windows NSIS ${{ matrix.mode }} App
        if: startsWith(matrix.build.platform, 'windows')
        shell: bash
        run: wails build -clean -platform ${{ matrix.build.platform }} ${{ steps.set_debug.outputs.arg }} -nsis -o asmblive_${{ steps.normalise_platform.outputs.tag }}${{ steps.set_debug.outputs.suffix }}_nsis.exe
      - name: Upload Windows NSIS ${{ matrix.mode }} artifact
        if: startsWith(matrix.build.platform, 'windows')
        uses: actions/upload-artifact@v4
        with:
          name: asmblive_${{ steps.normalise_platform.outputs.tag }}${{ steps.set_debug.outputs.suffix }}_nsis.exe
          path: build/bin/asmblive_${{ steps.normalise_platform.outputs.tag }}${{ steps.set_debug.outputs.suffix }}_nsis.exe

      # MacOS
      - name: Build MacOS ${{ matrix.mode }} App
        if: startsWith(matrix.build.platform, 'darwin')
        shell: bash
        run: wails build -clean -platform ${{ matrix.build.platform }} ${{ steps.set_debug.outputs.arg }}
      - name: Add perms to MacOS ${{ matrix.mode }} App
        if: startsWith(matrix.build.platform, 'darwin')
        shell: bash
        run: chmod +x build/bin/asmblive.app/Contents/MacOS/asmblive
      - name: Package MacOS ${{ matrix.mode }} App
        if: startsWith(matrix.build.platform, 'darwin')
        shell: bash
        run: |
          pkgbuild --analyze --root build/bin/asmblive.app build/bin/components.plist
          pkgbuild --root build/bin/asmblive.app --component-plist build/bin/components.plist --install-location /Applications build/bin/asmblive_${{ steps.normalise_platform.outputs.tag }}${{ steps.set_debug.outputs.suffix }}.pkg
      - name: Upload MacOS ${{ matrix.mode }} artifact
        if: startsWith(matrix.build.platform, 'darwin')
        uses: actions/upload-artifact@v4
        with:
          name: asmblive_${{ steps.normalise_platform.outputs.tag }}${{ steps.set_debug.outputs.suffix }}.pkg
          path: build/bin/asmblive_${{ steps.normalise_platform.outputs.tag }}${{ steps.set_debug.outputs.suffix }}.pkg
